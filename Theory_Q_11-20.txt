11) Как тестировать продукт,если требования ещё не зафиксированы:
     - Если спецификация требований недоступна для продукта,тогда план тестирования может быть создан на основе предположений,сделанных относительно продукта.Но - все предположения в плане тестирования должны быть хорошо задокументированы.

12) Как узнать,было ли создано достаточно тестов для тестирования продукта:
     - Прежде всего проверяем,охватывает ли каждое требование хотя бы один тест-кейс.Если да,то можно сказать,что тестовых примеров достаточно для тестирования продукта.

13) Тестовые данные - это набор входных значений,необходимых для выполнения тест-кейса.Тестировщики определяют данные в соответствии с требованиями - это можно сделать вручную или или использовать инструменты генерации.

14) Бета-Тестирование - это фаза,когда тестирование происходит на конечных пользователях для обеспечения обратной связи.Существуют различные типы Бета-тестов - они заключаются в следующем:
    - Традиционное Бета-тестирование - когда продукт распостраняется на целевой рынок,и соответствующие данные собираются по всем аспектам - они могут быть использованы для улучшения продукта.
    - Публичное Бета-тестирование - когда продукт публикуется во внешнем мире через онлайн-каналы и данные могут быть получены от любого пользователя.На основе обратной связи могут быть сделаны улучшения продукта.
    - Техническое Бета-тестирование - когда продукт передаётся во внутреннюю группу организации и собирает отзывы/данные от сотрудников организации.
    - Целевая Бета-версия - когда продукт выпущен на рынок для сбора отзывов об особенностях программы
    - Бета-версия после выпуска - когда продукт уже выпущен на рынок и данные собираются для внесения улучшений в будущем выпуске продукта.

15) Пилотное тестирование (Pilot Testing) - это тип тестирования ПО,который проверяет компонент системы или всю систему в режиме реального времени.Целью такого тестирования является оценка осуществимости,времени,стоимости,риска и эффективности исследовательского проекта.
 - Проводится точно между UAT и Production
 - Помогает в раннем обнаружении ошибок в системе

16) Отличие Build от Release - 
   Build - это номер,даваемый ПО при передаче от разработчиков тестировщикам.
   Release - это номер,даваемый ПО при передаче конечному пользователю.

17) Бизнес-логика (Domain) - это то,что конкретная программа по задумке должна сделать.
   Это правила,которые должны соблюдаться в данной конкретной программе,определённые бизнес-клиентом.
   Слои приложения-слой пользовательского интерфейса,слой бизнес-логики,слой сохранения данных.

18) Основные виды тестирования ПО :
   --> Функциональные виды ("ЧТО?"-проверяет весь функционал продукта)
       - Функциональное тестирование (Functional Testing)
       - Тестирование взаимодействия (Interoperability Testing)
  -- > Нефункциональные виды ("Как?")
       о- Производительности (Performance)
                - Тестирование ёмкости/способностей (Capacity Testing)
	            - Стрессовое (Stress Testing)
	      		- Нагрузочное (Load Testing)
	            - Объёмное Тестирование (Volume Testing)
	            - Выносливости (Soak/Endurance Testing)
	            - Стабильности/Надёжности (Stability/Reliability Testing)
	            - Шиповое (Spike)
	            - Отказоустойчивости (Stability Testing)
	            - Масштабируемости (Scalability Testing)
	   о- Отказ и Восстановление (Failover and Recovery Testing)
	   о- Удобство пользования (Usability Testing)
	   о- Тестирование установки (Installation Testing)
	   о- Тестирование Безопасности (Security and Access Control Testing)
	   о- Конфигурационное (Configuration Testing)
  -- > Связанное с Изменениями:
       о- Регрессионное (Regression Testing)
	   о- Санитарное (Sanity Testing)
	   о- Дымовое (Smoke Testing)
	   о- Тестирование Сборки (Build Verification Testing)
	   
19)  Методы Тестирования:
     - Метод Чёрного Ящика - техника тестирования, основанная на работе исключительно с внешними интерфейсами тестируемой системы.Методика тестирования без каких-либо знаний о внутренней работе приложения.
	 Тестировщик будет взаимодействовать с пользовательским интерфейсом системы, предоставляя входные данные и анализируя выходы, не зная, как и где обрабатываются входы.
	 
	 - Метод Белого Ящика - это подробное исследование внутренней логики и структуры кода. Тестирование с использованием белого ящика также называется тестированием стекла или открытым тестированием . Чтобы выполнить тестирование белого ящика в приложении, тестер должен знать внутреннюю работу кода.Тестировщик должен заглянуть внутрь исходного кода и выяснить, какое устройство / блок кода ведет себя некорректно.
	 
	 - Метод Серого Ящика - метод тестирования ПО, который предполагает комбинацию White Box и Black Box подходов. То есть, внутреннее устройство программы нам известно лишь частично. Предполагается, например, доступ к внутренней структуре и алгоритмам работы ПО для написания максимально эффективных тест-кейсов, но само тестирование проводится с помощью техники черного ящика, то есть, с позиции пользователя. Либо нам не доступна внутренняя реализация функций, но мы знаем на уровень ниже, чем пользователи – интерфейсы/эндпоинты и т.п.
 
20)  Уровни тестирования/Пирамида (Testing Levels) - это абстракция, которая означает группировку тестов программного обеспечения по разным уровням детализации. Она также даёт представление, сколько тестов должно быть в каждой из этих групп. Чем выше уровень, тем меньше тестов.
     
